===============================================================
How to create a physical disk along with Logical volume group
===============================================================
##Validating the disk
fdisk -l or dmesg

##Formating the disk
fdisk "/dev/xvdk" --device name
n ---> new partition
p ---> Primary partition
1
after that enter/enter/enter
Command (m for help): w
The partition table has been altered!

##Create a LVM
--sudo yum install lvm2 --Install the logical volume manager
pvcreate /dev/xvdk1 
Physical volume "/dev/xvdk1" successfully created.

##pvdisplay ,check physical volume details
  "/dev/xvdk1" is a new physical volume of "1023.00 MiB"
  --- NEW Physical volume ---
  PV Name               /dev/xvdk1
  VG Name
  PV Size               1023.00 MiB
  Allocatable           NO
  PE Size               0
  Total PE              0
  Free PE               0
  Allocated PE          0
  PV UUID               XOnUYw-ir62-WR5k-ARAX-1cQh-pBEN-hxerZl
##Create volume group  
vgcreate vgpool /dev/xvdk1
Volume group "vgpool" successfully created  

##Create Logical volume  
lvcreate -L 1000M -n Stuff vgpool 
--Stuff  >> Logical volume name
--vgpool >> Volume group name
[root@eng-dbpoc-pc ~]# lvcreate -L 1000M -n Stuff vgpool
  Logical volume "Stuff" created.
  
vgs -- volume group detail [vgpool]
lvs -- logical volume details [Stuff] 

##Format and mount the logical volume  
mkfs tab key you will find the more file system details
mkfs -t ext3 /dev/vgpool/Stuff

## mkfs -t ext3 /dev/vgpool/Stuff
Output:
------
mke2fs 1.42.9 (28-Dec-2013)
Filesystem label=
OS type: Linux
Block size=4096 (log=2)
Fragment size=4096 (log=2)
Stride=0 blocks, Stripe width=0 blocks
64000 inodes, 256000 blocks
12800 blocks (5.00%) reserved for the super user
First data block=0
Maximum filesystem blocks=264241152
8 block groups
32768 blocks per group, 32768 fragments per group
8000 inodes per group
Superblock backups stored on blocks:
        32768, 98304, 163840, 229376

Allocating group tables: done
Writing inode tables: done
Creating journal (4096 blocks): done
Writing superblocks and filesystem accounting information: done

##Mount the volume
cd /
--Create a directory
mkdir /maha
fdisk -l -- you can find your vg details
<<Disk /dev/mapper/vgpool-Stuff: 1048 MB, 1048576000 bytes, 2048000 sectors >>

mount -t ext3 /dev/mapper/vgpool-Stuff /maha --Mount the directory

##df -pTH --disk details
--output
[root@eng-dbpoc-pc /]# df -hTP
Filesystem               Type      Size  Used Avail Use% Mounted on
devtmpfs                 devtmpfs   16G     0   16G   0% /dev
tmpfs                    tmpfs      16G  4.0K   16G   1% /dev/shm
tmpfs                    tmpfs      16G   25M   16G   1% /run
tmpfs                    tmpfs      16G     0   16G   0% /sys/fs/cgroup
/dev/xvda2               xfs        10G  6.5G  3.6G  65% /
/dev/xvdf1               xfs       6.0G  148M  5.9G   3% /home
/dev/xvdj1               xfs      1020M   34M  987M   4% /tmp
/dev/xvdg1               xfs       6.0G  3.0G  3.1G  50% /var
/dev/xvdh1               xfs      1020M  204M  817M  20% /var/log
/dev/xvdi1               xfs       5.0G  1.2G  3.9G  24% /var/log/audit
tmpfs                    tmpfs     3.2G     0  3.2G   0% /run/user/1000
/dev/mapper/vgpool-Stuff ext3      969M  1.3M  918M   1% /maha

### Add a new volume in the existing volume group###

-- created a new disk and formatted the above method and attached to the instance
## vgextend vgpool /dev/xvdl1
  Physical volume "/dev/xvdl1" successfully created.
  Volume group "vgpool" successfully extended
## lvextend -L+1000M /dev/mapper/vgpool-Stuff
  Size of logical volume vgpool/Stuff changed from 1000.00 MiB (250 extents) to 1.95 GiB (500 extents).
  Logical volume vgpool/Stuff successfully resized.
  
## vgdisplay
  --- Volume group ---
  VG Name               vgpool
  System ID
  Format                lvm2
  Metadata Areas        2
  Metadata Sequence No  3
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                1
  Open LV               1
  Max PV                0
  Cur PV                2
  Act PV                2
  VG Size               1.99 GiB ----Size got increased
  PE Size               4.00 MiB
  Total PE              510
  Alloc PE / Size       250 / 1000.00 MiB
  Free  PE / Size       260 / <1.02 GiB
  VG UUID               cnxBC6-fgk3-tNh5-qvhq-WpgU-x6Hm-4ExZhC 
  
## resize2fs /dev/mapper/vgpool-Stuff
resize2fs 1.42.9 (28-Dec-2013)
Filesystem at /dev/mapper/vgpool-Stuff is mounted on /maha; on-line resizing required
old_desc_blocks = 1, new_desc_blocks = 1
The filesystem on /dev/mapper/vgpool-Stuff is now 512000 blocks long. 

---Output
[root@eng-dbpoc-pc /]# df -hTP
Filesystem               Type      Size  Used Avail Use% Mounted on
devtmpfs                 devtmpfs   16G     0   16G   0% /dev
tmpfs                    tmpfs      16G  4.0K   16G   1% /dev/shm
tmpfs                    tmpfs      16G   25M   16G   1% /run
tmpfs                    tmpfs      16G     0   16G   0% /sys/fs/cgroup
/dev/xvda2               xfs        10G  6.5G  3.6G  65% /
/dev/xvdf1               xfs       6.0G  148M  5.9G   3% /home
/dev/xvdj1               xfs      1020M   34M  987M   4% /tmp
/dev/xvdg1               xfs       6.0G  3.0G  3.1G  50% /var
/dev/xvdh1               xfs      1020M  204M  817M  20% /var/log
/dev/xvdi1               xfs       5.0G  1.2G  3.9G  24% /var/log/audit
tmpfs                    tmpfs     3.2G     0  3.2G   0% /run/user/1000
/dev/mapper/vgpool-Stuff ext3      2.0G  1.5M  1.9G   1% /maha --->>Check the space here extended 2GB in this mount point

### Deleting a  logical volume manager ###

umount /maha --Unmount the volume

[root@eng-dbpoc-pc /]# df -hTP
Filesystem     Type      Size  Used Avail Use% Mounted on
devtmpfs       devtmpfs   16G     0   16G   0% /dev
tmpfs          tmpfs      16G  4.0K   16G   1% /dev/shm
tmpfs          tmpfs      16G   25M   16G   1% /run
tmpfs          tmpfs      16G     0   16G   0% /sys/fs/cgroup
/dev/xvda2     xfs        10G  6.5G  3.6G  65% /
/dev/xvdf1     xfs       6.0G  148M  5.9G   3% /home
/dev/xvdj1     xfs      1020M   34M  987M   4% /tmp
/dev/xvdg1     xfs       6.0G  3.0G  3.1G  50% /var
/dev/xvdh1     xfs      1020M  204M  817M  20% /var/log
/dev/xvdi1     xfs       5.0G  1.2G  3.9G  24% /var/log/audit
tmpfs          tmpfs     3.2G     0  3.2G   0% /run/user/1000
[root@eng-dbpoc-pc /]# lvdisplay
  --- Logical volume ---
  LV Path                /dev/vgpool/Stuff
  LV Name                Stuff
  VG Name                vgpool
  LV UUID                olO8NO-VUko-QH1Q-ffwN-i18x-3BJH-CNbzmp
  LV Write Access        read/write
  LV Creation host, time eng-dbpoc-pc.avivaaws.com, 2020-03-02 14:42:59 +0000
  LV Status              available
  # open                 0
  LV Size                1.95 GiB
  Current LE             500
  Segments               2
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     8192
  Block device           253:0

[root@eng-dbpoc-pc /]# vgdisplay
  --- Volume group ---
  VG Name               vgpool
  System ID
  Format                lvm2
  Metadata Areas        2
  Metadata Sequence No  4
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                1
  Open LV               0
  Max PV                0
  Cur PV                2
  Act PV                2
  VG Size               1.99 GiB
  PE Size               4.00 MiB
  Total PE              510
  Alloc PE / Size       500 / 1.95 GiB
  Free  PE / Size       10 / 40.00 MiB
  VG UUID               cnxBC6-fgk3-tNh5-qvhq-WpgU-x6Hm-4ExZhC

## Remove the logical volume
-- lvremove /dev/vgpool/Stuff
Do you really want to remove active logical volume vgpool/Stuff? [y/n]: y
  Logical volume "Stuff" successfully removed
  
## Remove the volume group
-- vgremove vgpool
  Volume group "vgpool" successfully removed
  
Reference url : https://www.howtogeek.com/howto/40702/how-to-manage-and-use-lvm-logical-volume-management-in-ubuntu/  

  
  

